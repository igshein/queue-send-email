version: '3.7'
services:
  nginx:
    image: nginx:${NGINX_VERSION}
    volumes:
      - ./app:/var/www/html:ro
      - ./.docker/config/nginx/php-fpm.conf:/etc/nginx/conf.d/default.conf
      - ./.docker/config/nginx/certs:/root/certs
      - ./.docker/log/nginx:/var/log/nginx
    ports:
      - ${NGINX_PORT}:80
      - ${NGINX_SSL_PORT}:443
    depends_on:
      - php
    env_file:
      - .env
    tty: true

  php:
    image: php:${PHP_VERSION}-fpm
    build:
      context: .docker
      dockerfile: ./config/php/Dockerfile.${PHP_VERSION}
    volumes:
      - ./app:/var/www/html
      - ./.docker/config/php/error-log.conf:/usr/local/etc/php-fpm.d/error-log.conf
      - ./.docker/config/php/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./.docker/log/php/error.log:/var/log/php-fpm/error.log
      - ./.docker/data/php/composer/:/root/.composer
      - ./.docker/config/php/docker-entrypoint.sh:/root/docker-entrypoint.sh
      - ./.docker/config/php/cacert.pem:/etc/ssl/certs/cacert.pem
      - ./.docker/log/mysql:/var/log/mysql
      - ./.docker/data/mysql:/var/lib/mysql/data
    entrypoint: ['sh', '/root/docker-entrypoint.sh']
    depends_on:
      - mysql
      - redis
    ports:
        - ${PHP_PORT_DOCKER}:9000
    env_file:
      - .env
    tty: true

  mysql:
    ## image: mysql:5.7
    build:
      context: .docker
      dockerfile: ./config/mysql/Dockerfile
    hostname: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      TZ: ${DB_TIME_ZONE}
    ports:
      - ${DB_PORT}:3306
    volumes:
      - ./.docker/data/mysql:/var/lib/mysql
#      - ./.docker/config/mysql/dump/dump.sql:/docker-entrypoint-initdb.d/dump.sql
    env_file:
      - .env
    tty: true

  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    ports:
      - ${PHPMYADMIN_PORT}:80
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}

  redis:
    image: redis:${REDIS_VERSION}
    ports:
      - ${REDIS_PORT}:6379
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - ./.docker/log/redis:/var/log/redis
      - ./.docker/data/redis:/data
    env_file:
      - .env
    tty: true